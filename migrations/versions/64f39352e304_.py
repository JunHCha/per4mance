"""empty message

Revision ID: 64f39352e304
Revises: 6920d892aeb0
Create Date: 2021-11-27 23:42:41.856383

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "64f39352e304"
down_revision = "6920d892aeb0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "course",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("evaluator", postgresql.UUID(), nullable=True),
        # sa.Column("survey_config", sa.INTEGER(), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("start_term", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("end_term", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["evaluator"],
            ["user.id"],
        ),
        # sa.ForeignKeyConstraint(
        #     ["survey_config"],
        #     ["survey_config.id"],
        # ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "survey_config",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("course", sa.INTEGER(), nullable=True),
        sa.Column("survey_count", sa.INTEGER(), nullable=True),
        sa.Column("scale_factor", sa.FLOAT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["course"],
            ["course.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("course", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("size", sa.INTEGER(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["course"],
            ["course.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "survey",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("course", sa.INTEGER(), nullable=True),
        sa.Column("survey_config", sa.INTEGER(), nullable=True),
        sa.Column("completeness", sa.FLOAT(), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("start_term", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("end_term", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("class_notes", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["course"],
            ["course.id"],
        ),
        sa.ForeignKeyConstraint(
            ["survey_config"],
            ["survey_config.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_survey_report",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("survey", sa.INTEGER(), nullable=True),
        sa.Column("group", sa.INTEGER(), nullable=True),
        sa.Column("completeness", sa.FLOAT(), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("team_mark", sa.FLOAT(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["group"],
            ["group.id"],
        ),
        sa.ForeignKeyConstraint(
            ["survey"],
            ["survey.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "groupxuser",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("group", sa.INTEGER(), nullable=True),
        sa.Column("member", postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group"],
            ["group.id"],
        ),
        sa.ForeignKeyConstraint(
            ["member"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "individual_score",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("group_survey_report", sa.INTEGER(), nullable=True),
        sa.Column("owner", postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_survey_report"],
            ["group_survey_report.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "user", sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=True)
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "created_at")
    op.drop_table("individual_score")
    op.drop_table("groupxuser")
    op.drop_table("group_survey_report")
    op.drop_table("survey")
    op.drop_table("group")
    op.drop_table("survey_config")
    op.drop_table("course")
    # ### end Alembic commands ###
